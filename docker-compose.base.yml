version: "3.9"
networks:
  dina:
    ipam:
      config:
        - subnet: ${SUBNET}
services:
  traefik:
    image: traefik:v2.8.8
    command:
      # debug flags - may be commented or removed
      # Traefik dashboard: access localhost:8999 in browser
      - "--api.insecure=true"
    ports:
      - "443:443"
      # 80 will be redirected to 443 by configuration
      - "80:80"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./config/traefik-dynamic.yml:/etc/traefik/dynamic.yml:ro
      - ./certs:/etc/certs:ro
      # Allow Traefik to log to a local file
      # - ./logs/traefik:/tmp/traefik
    networks:
      dina:
        ipv4_address: ${TRAEFIK_IP}

  keycloak:
    # we need a custom image optimized for Postgres. We are using the image tag to force a rebuild when there is a new Keycloak base container.
    image: keycloak_pg:20.0.5
    build:
      context: keycloak/.
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_DATABASE: keycloak_db
      KC_DB_USERNAME: keycloak_user
      KC_DB_PASSWORD: keycloak_user
      KC_HOSTNAME: ${KEYCLOAK_HOSTNAME}
      KC_HOSTNAME_ADMIN: ${KEYCLOAK_ADMIN_HOSTNAME}
      KC_PROXY: edge
#      use CERTIFICATE with proxy passthrough
#      KC_HTTPS_CERTIFICATE_FILE: /etc/certs/dina-local-cert.pem
#      KC_HTTPS_CERTIFICATE_KEY_FILE: /etc/certs/dina-local-key.pem
    ports:
      - 8443:8443
    networks:
      dina:
    volumes:
      - ./keycloak/keycloak-dina-starter-realm.json:/opt/keycloak/data/import/realm.json
      - ./dina-keycloak-theme:/opt/keycloak/themes/dina
      - ./certs:/etc/certs:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.tls=true"
      - "traefik.http.routers.keycloak.rule=Host(`${KEYCLOAK_HOSTNAME}`, `${KEYCLOAK_ADMIN_HOSTNAME}`) && PathPrefix(`${KEYCLOAK_HOSTNAME_PATH}`)"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
    depends_on:
      - keycloak-db

  keycloak-db:
    image: "postgres:12"
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_PASSWORD: keycloak_user
      POSTGRES_USER: keycloak_user
    networks:
      - dina
    volumes:
      - ./keycloak-data:/var/lib/postgresql/data

  dina-db:
    image: "postgis/postgis:12-3.1-alpine"
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      timeout: 5s
      interval: 10s
      retries: 10
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    networks:
      - dina
    volumes:
      # Over write https://github.com/postgis/docker-postgis/blob/master/10-3.1/Dockerfile#L16
      - ./skipPostGisExtensions.sh:/docker-entrypoint-initdb.d/10_postgis.sh

  init-db:
    image: "aafcbicoe/dina-db-init-container:0.2"
    environment:
      POSTGRES_HOST: dina-db
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}

      DINA_DB: agent collection dina_user object_store seqdb loan_transaction export

      MIGRATION_USER_agent: ${AGENT_MIGRATION_USER}
      MIGRATION_USER_PW_agent: ${AGENT_MIGRATION_USER_PW}
      WEB_USER_agent: ${AGENT_WEB_USER}
      WEB_USER_PW_agent: ${AGENT_WEB_USER_PW}

      MIGRATION_USER_collection: ${COLL_MIGRATION_USER}
      MIGRATION_USER_PW_collection: ${COLL_MIGRATION_USER_PW}
      WEB_USER_collection: ${COLL_WEB_USER}
      WEB_USER_PW_collection: ${COLL_WEB_USER_PW}
      PG_EXTENSION_collection: postgis

      MIGRATION_USER_dina_user: ${DINA_USER_MIGRATION_USER}
      MIGRATION_USER_PW_dina_user: ${DINA_USER_MIGRATION_USER_PW}
      WEB_USER_dina_user: ${DINA_USER_WEB_USER}
      WEB_USER_PW_dina_user: ${DINA_USER_WEB_USER_PW}

      MIGRATION_USER_object_store: ${OBJ_STORE_MIGRATION_USER}
      MIGRATION_USER_PW_object_store: ${OBJ_STORE_MIGRATION_USER_PW}
      WEB_USER_object_store: ${OBJ_STORE_WEB_USER}
      WEB_USER_PW_object_store: ${OBJ_STORE_WEB_USER_PW}

      MIGRATION_USER_seqdb: ${SEQDB_MIGRATION_USER}
      MIGRATION_USER_PW_seqdb: ${SEQDB_MIGRATION_USER_PW}
      WEB_USER_seqdb: ${SEQDB_WEB_USER}
      WEB_USER_PW_seqdb: ${SEQDB_WEB_USER_PW}
      PG_EXTENSION_seqdb: pgcrypto

      MIGRATION_USER_loan_transaction: ${LOAN_TRANSACTION_MIGRATION_USER}
      MIGRATION_USER_PW_loan_transaction: ${LOAN_TRANSACTION_MIGRATION_USER_PW}
      WEB_USER_loan_transaction: ${LOAN_TRANSACTION_WEB_USER}
      WEB_USER_PW_loan_transaction: ${LOAN_TRANSACTION_WEB_USER_PW}

      MIGRATION_USER_export: ${EXPORT_MIGRATION_USER}
      MIGRATION_USER_PW_export: ${EXPORT_MIGRATION_USER_PW}
      WEB_USER_export: ${EXPORT_WEB_USER}
      WEB_USER_PW_export: ${EXPORT_WEB_USER_PW}
    networks:
      - dina

    depends_on:
      dina-db:
        condition: service_healthy
