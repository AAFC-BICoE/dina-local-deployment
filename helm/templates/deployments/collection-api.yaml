apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.app.name }}
  name: {{ .Values.app.name }}-{{ .Values.global.environment.config.collection_api.label }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.app.name }}-{{ .Values.global.environment.config.collection_api.label }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0  
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app: {{ .Values.app.name }}-{{ .Values.global.environment.config.collection_api.label }}
    spec:
      initContainers:
        - name: check-db
          image: {{ .Values.services.initdb.image }}
          command:
            - sh
            - -c
            - until pg_isready -h {{ tpl .Values.services.initdb.environment.POSTGRES_HOST . }}; do echo waiting for database; sleep 10; done;
        - name: init-db
          image: {{ .Values.services.initdb.image }}
          env:
          - name: POSTGRES_DB
            value: {{ tpl .Values.services.initdb.environment.POSTGRES_DB . }}
          - name: POSTGRES_PASSWORD
            {{- if not .Values.global.environment.config.dina_db.db_password }}
            valueFrom:
              secretKeyRef:
                name: dina-db-secret
                key: password
            {{- else }}
            value: {{ tpl .Values.services.initdb.environment.POSTGRES_PASSWORD . }}
            {{- end }}
          - name: POSTGRES_HOST
            value: {{ tpl .Values.services.initdb.environment.POSTGRES_HOST . }}
          - name: POSTGRES_USER
            value: {{ tpl .Values.services.initdb.environment.POSTGRES_USER . }}
          - name: DINA_DB
            value: {{ .Values.services.initdb.config.collectionapi.DINA_DB }}
          - name: MIGRATION_USER_collection
            value: {{ tpl .Values.services.initdb.config.collectionapi.spring.liquibase.user . }}
          - name: MIGRATION_USER_PW_collection
            {{- if not .Values.global.environment.config.collection_api.liquibase_password }}
            valueFrom:
              secretKeyRef:
                name: collection-liquibase-secret
                key: password
            {{- else }}
            value: {{ tpl .Values.services.initdb.config.collectionapi.spring.liquibase.password . }}
            {{- end }}
          - name: WEB_USER_collection
            value: {{ tpl .Values.services.initdb.config.collectionapi.spring.datasource.username . }}
          - name: WEB_USER_PW_collection
            {{- if not .Values.global.environment.config.collection_api.datasource_password }}
            valueFrom:
              secretKeyRef:
                name: collection-datasource-secret
                key: password
            {{- else }}
            value: {{ tpl .Values.services.initdb.config.collectionapi.spring.datasource.password . }}
            {{- end }}
          - name: PG_EXTENSION_collection
            value: {{ .Values.services.initdb.config.collectionapi.PG_EXTENSION_collection }}
      containers:
        - name: collection-api
          image: {{ .Values.services.collectionapi.image }}
          imagePullPolicy: {{ .Values.services.keycloak.pullPolicy }}
          env:
            {{- if .Values.messageProducerOverride.enabled }}
            - name: MESSAGING_ISPRODUCER
              value: {{ .Values.services.collectionapi.environment.messaging.isProducer | quote}}
            - name: RABBITMQ_HOST
              value: {{ tpl .Values.services.collectionapi.environment.rabbitmq.host . }}
            {{- end }}
            - name: KEYCLOAK_ENABLED
              value: {{ .Values.global.environment.keycloak.enabled | quote }}         
            - name: KEYCLOAK_AUTH-SERVER-URL
              value: {{ tpl .Values.global.environment.keycloak.auth_server_url . }}
            - name: SPRING_DATASOURCE_URL
              value: {{ tpl .Values.services.collectionapi.environment.spring.datasource.url . }}
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ tpl .Values.services.initdb.config.collectionapi.spring.datasource.username . }}
            - name: SPRING_DATASOURCE_PASSWORD
              {{- if not .Values.global.environment.config.collection_api.datasource_password }}
              valueFrom:
                secretKeyRef:
                  name: collection-datasource-secret
                  key: password
              {{- else }}
              value: {{ tpl .Values.services.initdb.config.collectionapi.spring.datasource.password . }}
              {{- end }}
            - name: SPRING_LIQUIBASE_USER
              value: {{ tpl .Values.services.initdb.config.collectionapi.spring.liquibase.user . }}
            - name: SPRING_LIQUIBASE_PASSWORD
              {{- if not .Values.global.environment.config.collection_api.liquibase_password }}
              valueFrom:
                secretKeyRef:
                  name: collection-liquibase-secret
                  key: password
              {{- else }}
              value: {{ tpl .Values.services.initdb.config.collectionapi.spring.liquibase.password . }}
              {{- end }}
            - name: ACTUATOR_ALLOWEDIP
              value: {{ .Values.services.collectionapi.environment.actuator.allowedIP }}
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 1
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: {{ .Values.resources.apis.requests.memory }}
              cpu: {{ .Values.resources.apis.requests.cpu }}            
            limits:
              memory: {{ .Values.resources.apis.limits.memory }} 
              cpu: {{ .Values.resources.apis.limits.cpu }}
status: {}
