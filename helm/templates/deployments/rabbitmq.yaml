apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.app.name }}
  name: {{ .Values.app.name }}-rabbitmq-dina
spec:
  replicas: {{ if and .Values.profiles.search_api.enabled (not .Values.global.environment.config.dina_db.restore_db) }}1{{ else }}0{{ end }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}-rabbitmq-dina
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0  
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app: {{ .Values.app.name }}-rabbitmq-dina
    spec:
      hostname: rabbit-dina-node-1
      containers:
        - name: rabbitmq-dina
          image: {{ .Values.services.rabbitmq.image }}
          ports:
            - name: producer-port
              containerPort: 5672
            - name: consumer-port
              containerPort: 15672
          readinessProbe:
            tcpSocket:
              port: 5672
            initialDelaySeconds: 5
            periodSeconds: 1
          resources:
            requests:
              memory: {{ .Values.resources.general.requests.memory }}
              cpu: {{ .Values.resources.general.requests.cpu }}            
            limits:
              memory: {{ .Values.resources.general.limits.memory }} 
              cpu: {{ .Values.resources.general.limits.cpu }}
          volumeMounts:
            - name: rabbit-data-pv
              mountPath: /var/lib/rabbitmq
            - name: rabbit-logs-pv
              mountPath: /var/log/rabbitmq
      volumes:
        - name: rabbit-data-pv
          emptyDir: {}
        - name: rabbit-logs-pv
          emptyDir: {}