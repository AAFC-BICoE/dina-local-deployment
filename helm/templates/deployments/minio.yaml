apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: {{ .Values.app.name }}
  name: {{ .Values.app.name }}-minio
spec:
  serviceName: {{ .Values.app.name }}-minio      
  replicas: {{ if .Values.profiles.object_store_api.enabled }}1{{ else }}0{{ end }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}-minio 
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app: {{ .Values.app.name }}-minio
    spec:
      containers:
        - name: minio
          image: {{ .Values.services.minio.image }}
          command:
          - bin/bash
          - -ce
          args:
          - |
            minio server /data
          env:
            - name: MINIO_ROOT_USER
              value: {{ tpl .Values.services.minio.environment.MINIO_ROOT_USER . }}         
            - name: MINIO_ROOT_PASSWORD
              value: {{ tpl .Values.services.minio.environment.MINIO_ROOT_PASSWORD . }}
            - name: MINIO_VOLUMES
              value: /data
          resources:
            requests:
              memory: {{ .Values.resources.apis.requests.memory }}
              cpu: {{ .Values.resources.apis.requests.cpu }}            
            limits:
              memory: {{ .Values.resources.apis.limits.memory }} 
              cpu: {{ .Values.resources.apis.limits.cpu }} 
          volumeMounts:
            - name: minio-pv
              mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: minio-pv
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: gpfs-fileset-0
      resources:
        requests:
          storage: 2Gi
