{{- if not .Values.global.environment.config.dina_db.db_password }}
apiVersion: v1
kind: Secret
metadata:
  name: "dina-db-secret"
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
data:
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "dina-db-secret") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $dbSecret := (get $secretData "dina-db-secret") | default (randAlphaNum 32 | b64enc) }}
  password: {{ $dbSecret | quote }}
{{- else }}
{{- end }}
---
{{- if not .Values.global.environment.config.keycloak.db_password }}
apiVersion: v1
kind: Secret
metadata:
  name: "keycloak-db-secret"
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
data:
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "keycloak-db-secret") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $dbSecret := (get $secretData "keycloak-db-secret") | default (randAlphaNum 32 | b64enc) }}
  password: {{ $dbSecret | quote }}
{{- else }}
{{- end }}
---
{{- if not .Values.global.environment.config.collection_api.datasource_password }}
apiVersion: v1
kind: Secret
metadata:
  name: "collection-datasource-secret"
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
data:
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "collection-datasource-secret") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $dbSecret := (get $secretData "collection-datasource-secret") | default (randAlphaNum 32 | b64enc) }}
  password: {{ $dbSecret | quote }}
{{- else }}
{{- end }}
---
{{- if not .Values.global.environment.config.collection_api.liquibase_password }}
apiVersion: v1
kind: Secret
metadata:
  name: "collection-liquibase-secret"
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
data:
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "collection-liquibase-secret") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $dbSecret := (get $secretData "collection-liquibase-secret") | default (randAlphaNum 32 | b64enc) }}
  password: {{ $dbSecret | quote }}
{{- else }}
{{- end }}
