apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.base.yml -c
    kompose.version: 1.31.0 (a04ecdb9e)
  creationTimestamp: null
  labels:
    io.kompose.service: traefik
  name: traefik
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: traefik
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.base.yml -c
        kompose.version: 1.31.0 (a04ecdb9e)
      creationTimestamp: null
      labels:
        io.kompose.network/dina-local-deployment-dina: "true"
        io.kompose.service: traefik
    spec:
      containers:
        - args:
            - --api.insecure=true
          image: traefik:v2.8.8
          name: traefik
          ports:
            - containerPort: 443
              hostPort: 443
              protocol: TCP
            - containerPort: 80
              hostPort: 80
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/run/docker.sock
              name: traefik-claim0
            - mountPath: /etc/traefik/traefik.yml
              name: traefik-claim1
              readOnly: true
            - mountPath: /etc/traefik/dynamic.yml
              name: traefik-claim2
              readOnly: true
            - mountPath: /etc/certs
              name: traefik-claim3
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: traefik-claim0
          persistentVolumeClaim:
            claimName: traefik-claim0
        - name: traefik-claim1
          persistentVolumeClaim:
            claimName: traefik-claim1
            readOnly: true
        - name: traefik-claim2
          persistentVolumeClaim:
            claimName: traefik-claim2
            readOnly: true
        - name: traefik-claim3
          persistentVolumeClaim:
            claimName: traefik-claim3
            readOnly: true
status: {}
