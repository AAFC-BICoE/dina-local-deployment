apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}-dina-db
  labels:
    app: {{ .Values.app.name }}-dina-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.app.name }}-dina-db
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0  
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}-dina-db
    spec:
      containers:
        - name: dina-db
          readinessProbe:
            exec:
              command: 
              - sh
              - -c
              - psql -w -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c "SELECT 1"
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 120
          image: {{ .Values.services.dinadb.image }}
          imagePullPolicy: {{ .Values.services.dinadb.pullPolicy }}
          env:
            - name: POSTGRES_DB
              value: {{ .Values.services.dinadb.environment.POSTGRES_DB }}    
            - name: POSTGRES_PASSWORD
              value: {{ .Values.services.dinadb.environment.POSTGRES_PASSWORD }}    
            - name: POSTGRES_USER
              value: {{ .Values.services.dinadb.environment.POSTGRES_USER }}
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }} 
              cpu: {{ .Values.resources.requests.cpu }} 
            limits:
              memory: {{ .Values.resources.limits.memory }} 
              cpu: {{ .Values.resources.limits.cpu }}
          volumeMounts:
          - name: scripts-volume
            mountPath: /docker-entrypoint-initdb.d
          - name: dina-db-claim
            mountPath: /var/lib/postgresql/data
      volumes:
      - name: scripts-volume
        configMap:
          name: scripts-configmap
      - name: dina-db-claim
        persistentVolumeClaim:
          claimName: dina-db-claim
      nodeSelector:
      affinity:
      tolerations: